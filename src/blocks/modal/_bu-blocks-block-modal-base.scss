// =================================================================
// Sample Styles - Configurable
// =================================================================
//
//
// Styles in this file should mainly be for layout, width, etc that are
// not able to be overwritten by the variables in the global sass array
//
//


$column-base: 69;
$gutter-base: 60;
$margin-base: $gutter-base + 10; //page margin
$grid-base: ($column-base * 12) +  ($gutter-base * 11) +  ($margin-base * 2);

@mixin set-column-width-function( $number ) {
	width: ( ( $column-base / $grid-base ) * $number * 100 ) + ( ( $gutter-base / $grid-base ) * ( $number - 1 ) * 100 ) + vw;
}
@mixin set-column-width-function-px( $number ) {
	width: ( $column-base * $number ) + ( $gutter-base * ( $number - 1 ) ) + px;
}

@mixin set-column-width( $for-base:null, $for-xs:null, $for-sm:null, $for-md:null, $for-lg:null, $for-xl:null ) {
	@if ($for-base != null) {
		@include set-column-width-function( $for-base );
	}
	@if ($for-xs != null) {
		@include breakpoint( $xs ) {
			@include set-column-width-function( $for-xs );
		}
	}
	@if ($for-sm != null) {
		@include breakpoint( $sm ) {
			@include set-column-width-function( $for-sm );
		}
	}
	@if ($for-md != null) {
		@include breakpoint( $md ) {
			@include set-column-width-function( $for-md );
		}
	}
	@if ($for-lg != null) {
		@include breakpoint( $lg ) {
			@include set-column-width-function( $for-lg );
		}
	}
	@if $for-xl {
		@include breakpoint( $xl ) {
			@include set-column-width-function-px( $for-xl );
		}
	}
	@else if $for-lg {
		@include breakpoint( $xl ) {
			@include set-column-width-function-px( $for-md );
		}
	}
	@else if $for-md {
		@include breakpoint( $xl ) {
			@include set-column-width-function-px( $for-md );
		}
	}
	@else if $for-sm {
		@include breakpoint( $xl ) {
			@include set-column-width-function-px( $for-sm );
		}
	}
	@else if $for-xs {
		@include breakpoint( $xl ) {
			@include set-column-width-function-px( $for-xs );
		}
	}
}

.content-area > * { // TO DO: Move to global location
	margin-left: auto;
	margin-right: auto;

	&:not( .alignwide ):not( .alignfull ) {
		@include set-column-width( $for-base:12, $for-sm:10, $for-md:8 );

	}
}

.content-area > *.alignwide { // TO DO: Move to global location
	@include set-column-width( $for-base:12, $for-sm:12, $for-md:10 );
}

.bu-blocks-modal-noscroll {
  overflow: hidden;
}

.wp-block-editorial-modal-callout {
	@extend %col-full;
	background: $color-grayscale-d;
	text-align: center;
	position: relative;
	margin-top: 40px;
	margin-bottom: 60px;


	.wp-block-editorial-modal-media {
		width: 100%;

		.wp-block-editorial-modal-image {
			display: block;
			height: auto;
			width: 100%;
		}

		img {
			object-fit: cover;
		}
	}

	h1,
	p {
		@include breakpoint( $xs ) {
			color: $color-grayscale-f;
		}
	}
}

.wp-block-editorial-modal-content {
	display:none;
	@extend %col-full;
	padding: 60px 24px 24px;
	background: $color-grayscale-d;
	position: relative;

	@include breakpoint( $xs ) {
		padding: 90px 60px 60px;
	}

	.wp-block-editorial-modal-overlay-close {
		@extend %icon-close;
		position: absolute;
		top: 20px;
		left: 0;
		right: 0;
		text-align: center;

		@include breakpoint( $xs ) {
			top: 40px;
		}

		&::before {
			color: $color-grayscale-6;
		}
	}
}

.wp-block-editorial-modal-callout-content {
	max-width: 90%;
	left: 0;
	right: 0;
	margin: 0 auto;
	padding: 20px;

	@include breakpoint( $xs ) {
		display: flex;
		align-items: center;
		justify-content: center;
		position: absolute;
		top: 0;
		height: 100%;
		padding: 40px;
	}
}

.has-light-theme {
	.wp-block-editorial-modal-content {
		background: $color-grayscale-e;
	}
}

.has-dark-theme {
	.wp-block-editorial-modal-content {
		background: $color-grayscale-3;
	}

	.wp-block-editorial-modal-overlay-close,
	p {
		color: $color-grayscale-e;
	}
}

.has-primary-theme {
	.wp-block-editorial-modal-content {
		a,
		.wp-block-editorial-modal-overlay-close,
		.wp-block-editorial-modal-overlay-close::before,
		p {
			color: $color-grayscale-1;
		}
	}
}

.wp-block-editorial-modal-content.show-overlay {
	display: block;
	position: fixed;
	overflow-y: scroll;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 10000;
}

